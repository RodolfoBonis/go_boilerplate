{% raw %}
name: cd

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'version.txt'

jobs:
  get_commit_messages:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Get last release tag
        id: lasttag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      - name: Get commit messages
        id: log
        run: |
          messages=$(git log --pretty=format:'%s' --no-merges ${{ steps.lasttag.outputs.tag }}..HEAD)
          echo "$messages" > commit_messages.txt
        shell: bash

      - name: Upload commit messages
        uses: actions/upload-artifact@v2
        with:
          name: commit-messages
          path: commit_messages.txt

  build_and_deploy:
    needs: get_commit_messages
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Increment version
        run: |
          chmod +x ./.config/scripts/increment_version.sh
          ./.config/scripts/increment_version.sh
          echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Add, commit and push version increment
        uses: EndBug/add-and-commit@v7
        with:
          author_name: "GitHub Actions"
          author_email: "actions@github.com"
          message: "Increment version"
          add: "version.txt"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Preset Image Name
        run: echo "IMAGE_URL=$(echo ${{ steps.login-ecr.outputs.registry }}/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ env.VERSION }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_URL }}
          build-args: |
            "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}"
            "VERSION=${{ env.VERSION }}"

      - name: Deploy Image to CapRover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: "${{ secrets.CAPROVER_SERVER }}"
          app: "${{ secrets.APP_NAME }}"
          token: "${{ secrets.APP_TOKEN }}"
          image: ${{ env.IMAGE_URL }}

      - name: Create Tag for Release
        id: create_tag
        if: ${{ job.status == 'success' }}
        run: echo "::set-output name=tag::v${{ env.VERSION }}"

      - name: Download commit messages
        uses: actions/download-artifact@v2
        with:
          name: commit-messages
          path: .

      - name: Read commit messages from file
        run: |
          export MESSAGES=$(cat commit_messages.txt)
          echo "MESSAGES='$MESSAGES'" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        if: ${{ job.status == 'success' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: Release ${{ env.VERSION }}
          body: |
            Changes in this Release:
            ${{ env.MESSAGES }}
          draft: false
          prerelease: false

      - if: ${{ job.status == 'success'}}
        name: Send Message via Telegram
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.BOTTOKEN }}
          to: ${{ secrets.CHAT_ID }}
          message: |
            ✅ ${{ github.actor }} created commit:
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Build Status: ${{ job.status }}
            
            Changelog:
            ${{ env.MESSAGES }}

            Good job!

      - if: ${{ job.status != 'success'}}
        name: Send Message via Telegram
        uses: appleboy/telegram-action@master
        with:
          token: ${{ secrets.BOTTOKEN }}
          to: ${{ secrets.CHAT_ID }}
          message: |
            ⛔️ There was an error when build project
            ${{ github.actor }} created commit:
            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Build Status: ${{ job.status }}
            
            Changelog:
            ${{ env.MESSAGES }}

  {% endraw %}